{"ast":null,"code":"import _regeneratorRuntime from \"/Users/michelecarmagnani/Git/React/nextjs/project2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/michelecarmagnani/Git/React/nextjs/project2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nvar apiSelected = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(meetupId) {\n    var client, db, meeupsCollection, selectedMeetup;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return MongoClient.connect(\"mongodb+srv://michele:63ZjnRttdaxOFRoi@cluster0.3xonm.mongodb.net/meetups?retryWrites=true&w=majority\");\n\n          case 2:\n            client = _context.sent;\n            db = client.db();\n            meeupsCollection = db.collection(\"meetups\");\n            _context.next = 7;\n            return meeupsCollection.findOne({\n              _id: ObjectId(meetupId)\n            });\n\n          case 7:\n            selectedMeetup = _context.sent;\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function apiSelected(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default selected;","map":{"version":3,"sources":["/Users/michelecarmagnani/Git/React/nextjs/project2/pages/api/meetup.js"],"names":["MongoClient","ObjectId","apiSelected","meetupId","connect","client","db","meeupsCollection","collection","findOne","_id","selectedMeetup","selected"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AACA,IAAMC,WAAW;AAAA,sEAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGH,WAAW,CAACI,OAAZ,CACnB,uGADmB,CADH;;AAAA;AACZC,YAAAA,MADY;AAIZC,YAAAA,EAJY,GAIPD,MAAM,CAACC,EAAP,EAJO;AAKZC,YAAAA,gBALY,GAKOD,EAAE,CAACE,UAAH,CAAc,SAAd,CALP;AAAA;AAAA,mBAMWD,gBAAgB,CAACE,OAAjB,CAAyB;AACpDC,cAAAA,GAAG,EAAET,QAAQ,CAACE,QAAD;AADuC,aAAzB,CANX;;AAAA;AAMZQ,YAAAA,cANY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXT,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAUA,eAAeU,QAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nconst apiSelected = async (meetupId) => {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://michele:63ZjnRttdaxOFRoi@cluster0.3xonm.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meeupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meeupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n};\nexport default selected;\n"]},"metadata":{},"sourceType":"module"}