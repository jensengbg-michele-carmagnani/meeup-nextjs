{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/michelecarmagnani/Git/React/nextjs/project2/pages/[meetupId]/index.js\";\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDatial\";\nimport { MongoClient } from \"mongodb\";\nimport selectedMeetup from '../../utils/selectedMeetup';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    details: props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://michele:63ZjnRttdaxOFRoi@cluster0.3xonm.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meeupsCollection = db.collection(\"meetups\");\n  const meetups = await meeupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client;\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://michele:63ZjnRttdaxOFRoi@cluster0.3xonm.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meeupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meeupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close;\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/michelecarmagnani/Git/React/nextjs/project2/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MongoClient","selectedMeetup","MeetupDetails","props","getStaticPaths","client","connect","db","meeupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne","close","meetupData"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBAAO,QAAC,YAAD;AAAc,IAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,uGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AACAR,EAAAA,MAAM;AAEN,SAAO;AACLS,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CAfM;AAgBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACF,QAAMd,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,uGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB;AACA,QAAMR,cAAc,GAAG,MAAMO,gBAAgB,CAACe,OAAjB,CAA0B;AAAEX,IAAAA,GAAG,EAAEO;AAAP,GAA1B,CAA7B;AACAd,EAAAA,MAAM,CAACmB,KAAP;AAGE,SAAO;AACLrB,IAAAA,KAAK,EAAE;AACLsB,MAAAA,UAAU,EAAExB;AADP;AADF,GAAP;AAKD,CAhBM;AAkBP,eAAeC,aAAf","sourcesContent":["import React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDatial\";\nimport { MongoClient } from \"mongodb\";\nimport selectedMeetup from '../../utils/selectedMeetup'\n\nfunction MeetupDetails(props) {\n  return <MeetupDetail details={props} />;\n}\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://michele:63ZjnRttdaxOFRoi@cluster0.3xonm.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meeupsCollection = db.collection(\"meetups\");\n  const meetups = await meeupsCollection.find({}, { _id: 1 }).toArray();\n  client\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n};\nexport const getStaticProps = async (context) => {\n  const meetupId = context.params.meetupId;\nconst client = await MongoClient.connect(\n  \"mongodb+srv://michele:63ZjnRttdaxOFRoi@cluster0.3xonm.mongodb.net/meetups?retryWrites=true&w=majority\"\n);\nconst db = client.db();\nconst meeupsCollection = db.collection(\"meetups\");\nconst selectedMeetup = await meeupsCollection.findOne( { _id: meetupId } );\nclient.close;\n\n\n  return {\n    props: {\n      meetupData: selectedMeetup\n    },\n  };\n};\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}